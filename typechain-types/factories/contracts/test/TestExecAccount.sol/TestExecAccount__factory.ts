/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  TestExecAccount,
  TestExecAccountInterface,
} from "../../../../contracts/test/TestExecAccount.sol/TestExecAccount";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "anEntryPoint",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "accountGasLimits",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "gasFees",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct PackedUserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "innerCallRet",
        type: "bytes",
      },
    ],
    name: "Executed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract IEntryPoint",
        name: "entryPoint",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "SimpleAccountInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "addDeposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dest",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "func",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "dest",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "value",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "func",
        type: "bytes[]",
      },
    ],
    name: "executeBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "accountGasLimits",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "gasFees",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct PackedUserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "executeUserOp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "anOwner",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "accountGasLimits",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "gasFees",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct PackedUserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "missingAccountFunds",
        type: "uint256",
      },
    ],
    name: "validateUserOp",
    outputs: [
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawDepositTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c03461015f57601f611bd738819003918201601f19168301916001600160401b038311848410176101645780849260209460405283398101031261015f57516001600160a01b038116810361015f573060805260a05260005460ff8160081c1661010a5760ff808216036100cf575b604051611a5c908161017b823960805181818161037701528181610849015261095e015260a0518181816102970152818161060d015281816106af01528181610b7601528181610cb501528181610e3a015281816114ad01526114fe0152f35b60ff90811916176000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a13861006f565b60405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001b575b361561001957600080fd5b005b60003560e01c806301ffc9a71461013b578063150b7a021461013657806319822f7c146101315780633659cfe61461012c57806347e1da2a146101275780634a58db19146101225780634d44560d1461011d5780634f1ef2861461011857806352d1902d146101135780638da5cb5b1461010e5780638dd7712f14610109578063b0d691fe14610104578063b61d27f6146100ff578063bc197c81146100fa578063c399ec88146100f5578063c4d66de8146100f0578063d087d288146100eb5763f23a6e610361000e57610ea4565b610e07565b610d16565b610c89565b610bfa565b610ba5565b610b60565b610a3d565b610a10565b61094b565b610808565b61067e565b6105fe565b6104cd565b610350565b610262565b6101f9565b346101a95760203660031901126101a95760043563ffffffff60e01b81168091036101a957602090630a85bd0160e11b8114908115610198575b8115610187575b506040519015158152f35b6301ffc9a760e01b1490503861017c565b630271189760e51b81149150610175565b600080fd5b6001600160a01b038116036101a957565b35906101ca826101ae565b565b9181601f840112156101a9578235916001600160401b0383116101a957602083818601950101116101a957565b346101a95760803660031901126101a9576102156004356101ae565b6102206024356101ae565b6064356001600160401b0381116101a95761023f9036906004016101cc565b5050604051630a85bd0160e11b8152602090f35b90816101209103126101a95790565b346101a95760603660031901126101a9576004356001600160401b0381116101a957610292903690600401610253565b6044357f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316330361030b576102d56102ed9260243590611585565b90806102f1575b506040519081529081906020820190565b0390f35b600080808093338219f150610304611227565b50386102dc565b60405162461bcd60e51b815260206004820152601c60248201527f6163636f756e743a206e6f742066726f6d20456e747279506f696e74000000006044820152606490fd5b346101a95760203660031901126101a95760043561036d816101ae565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811691906103a630841415610efe565b6103c3600080516020611a07833981519152938285541614610f5f565b6103cb61182d565b604051906103d882610741565b600082527f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156104125750506100199150611088565b6020600491604094939451928380926352d1902d60e01b825286165afa6000918161046d575b5061045a5760405162461bcd60e51b81528061045660048201611039565b0390fd5b610019936104689114610fdb565b611118565b61048f91925060203d8111610496575b6104878183610777565b810190610fc0565b9038610438565b503d61047d565b9181601f840112156101a9578235916001600160401b0383116101a9576020808501948460051b0101116101a957565b346101a95760603660031901126101a9576001600160401b036004358181116101a9576104fe90369060040161049d565b6024929192358281116101a95761051990369060040161049d565b926044359081116101a95761053290369060040161049d565b93909161053d6114f4565b848414806105ed575b61054f9061132c565b816105a157505060005b82811061056257005b8061059761057c61057761059c94878a6113a9565b6113be565b61059161058a8489886113fa565b36916107b3565b906117ee565b61136e565b610559565b91909460009493945b8581106105b357005b806105976105c86105776105e8948a876113a9565b6105d3838b896113a9565b356105e261058a858b8a6113fa565b91611816565b6105aa565b508115806105465750818514610546565b60008060031936011261067b577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681813b1561067b5760405163b760faf960e01b8152306004820152918290602490829034905af180156106765761066a575080f35b61067390610729565b80f35b610fcf565b80fd5b346101a9576000604036600319011261067b5760043561069d816101ae565b6106a561182d565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811691839190833b1561070f5760449083604051958694859363040b850f60e31b855216600484015260243560248401525af180156106765761066a575080f35b8280fd5b634e487b7160e01b600052604160045260246000fd5b6001600160401b03811161073c57604052565b610713565b602081019081106001600160401b0382111761073c57604052565b606081019081106001600160401b0382111761073c57604052565b90601f801991011681019081106001600160401b0382111761073c57604052565b6001600160401b03811161073c57601f01601f191660200190565b9291926107bf82610798565b916107cd6040519384610777565b8294818452818301116101a9578281602093846000960137010152565b9080601f830112156101a957816020610805933591016107b3565b90565b60403660031901126101a957600435610820816101ae565b6024356001600160401b0381116101a95761083f9036906004016107ea565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811692919061087930851415610efe565b610896600080516020611a07833981519152948286541614610f5f565b61089e61182d565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156108d45750506100199150611088565b6020600491604094939451928380926352d1902d60e01b825286165afa6000918161092b575b506109185760405162461bcd60e51b81528061045660048201611039565b610019936109269114610fdb565b6111d4565b61094491925060203d8111610496576104878183610777565b90386108fa565b346101a95760003660031901126101a9577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031630036109a557604051600080516020611a078339815191528152602090f35b60405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608490fd5b346101a95760003660031901126101a95760005460405160109190911c6001600160a01b03168152602090f35b346101a9576003196040368201126101a9576001600160401b03906004358281116101a957610a70903690600401610253565b610a786114f4565b610a8560608201826113c8565b9290836004116101a957606093828101610ad0575b6040517fd3fddfd1276d1cc278f10907710a44474a32f917b2fcfa198f46ca7689215e2f9080610acb88888361191c565b0390a1005b8160409293949550019282840301126101a9576004810135610af1816101ae565b60248201359485116101a957610b3060009360047fd3fddfd1276d1cc278f10907710a44474a32f917b2fcfa198f46ca7689215e2f97869501016107ea565b80519160209091019083906001600160a01b03165af190610b58610b52611227565b9261188a565b388080610a9a565b346101a95760003660031901126101a9576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346101a95760603660031901126101a957600435610bc2816101ae565b604435906001600160401b0382116101a957610bf0610be86100199336906004016101cc565b61058a6114f4565b9060243590611816565b346101a95760a03660031901126101a957610c166004356101ae565b610c216024356101ae565b6001600160401b036044358181116101a957610c4190369060040161049d565b50506064358181116101a957610c5b90369060040161049d565b50506084359081116101a957610c759036906004016101cc565b505060405163bc197c8160e01b8152602090f35b346101a95760003660031901126101a9576040516370a0823160e01b81523060048201526020816024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa801561067657602091600091610cf9575b50604051908152f35b610d109150823d8111610496576104878183610777565b38610cf0565b346101a95760203660031901126101a957600435610d33816101ae565b610d7760005491610d5b60ff8460081c161580948195610df9575b8115610dd9575b50611415565b82610d6e600160ff196000541617600055565b610dc057611478565b610d7d57005b610d8d61ff001960005416600055565b604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498908060208101610acb565b610dd461010061ff00196000541617600055565b611478565b303b15915081610deb575b5038610d55565b6001915060ff161438610de4565b600160ff8216109150610d4e565b346101a95760003660031901126101a957604051631aab3f0d60e11b8152306004820152600060248201526020816044817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa8015610676576102ed91600091610e8657506040519081529081906020820190565b610e9e915060203d8111610496576104878183610777565b386102dc565b346101a95760a03660031901126101a957610ec06004356101ae565b610ecb6024356101ae565b6084356001600160401b0381116101a957610eea9036906004016101cc565b505060405163f23a6e6160e01b8152602090f35b15610f0557565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b6064820152608490fd5b15610f6657565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b6064820152608490fd5b908160209103126101a9575190565b6040513d6000823e3d90fd5b15610fe257565b60405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608490fd5b60809060208152602e60208201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960408201526d6f6e206973206e6f74205555505360901b60608201520190565b803b156110bd57600080516020611a0783398151915280546001600160a01b0319166001600160a01b03909216919091179055565b60405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608490fd5b9061112282611088565b6001600160a01b0382167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a28051158015906111cc575b611164575050565b6111c991600080604051936111788561075c565b602785527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c6020860152660819985a5b195960ca1b6040860152602081519101845af46111c3611227565b91611257565b50565b50600061115c565b906111de82611088565b6001600160a01b0382167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a280511580159061121f57611164575050565b50600161115c565b3d15611252573d9061123882610798565b916112466040519384610777565b82523d6000602084013e565b606090565b919290156112b9575081511561126b575090565b3b156112745790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b8251909150156112cc5750805190602001fd5b60405162461bcd60e51b8152602060048201529081906104569060248301905b919082519283825260005b848110611318575050826000602080949584010152601f8019910116010190565b6020818301810151848301820152016112f7565b1561133357565b60405162461bcd60e51b815260206004820152601360248201527277726f6e67206172726179206c656e6774687360681b6044820152606490fd5b600019811461137d5760010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b91908110156113b95760051b0190565b611393565b35610805816101ae565b903590601e19813603018212156101a957018035906001600160401b0382116101a9576020019181360383136101a957565b908210156113b9576114119160051b8101906113c8565b9091565b1561141c57565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b6000805462010000600160b01b03601093841b1662010000600160b01b0319909116178082556001600160a01b03921c8216917f000000000000000000000000000000000000000000000000000000000000000016907f47e55c76e7a6f1fd8996a1da8008c1ea29699cca35e7bcd057f2dec313b6e5de9080a3565b60018060a01b03807f0000000000000000000000000000000000000000000000000000000000000000163314908115611574575b501561153057565b606460405162461bcd60e51b815260206004820152602060248201527f6163636f756e743a206e6f74204f776e6572206f7220456e747279506f696e746044820152fd5b905060005460101c16331438611528565b907f19457468657265756d205369676e6564204d6573736167653a0a333200000000600052601c52603c6000206115e86115e060018060a01b03926115da61058a8560005460101c16966101008101906113c8565b90611738565b919091611618565b16036115f357600090565b600190565b6005111561160257565b634e487b7160e01b600052602160045260246000fd5b611621816115f8565b806116295750565b611632816115f8565b6001810361167f5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606490fd5b611688816115f8565b600281036116d55760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606490fd5b806116e16003926115f8565b146116e857565b60405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608490fd5b90604181511460001461176257611411916020820151906060604084015193015160001a9061176c565b5050600090600290565b9291907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083116117e25791608094939160ff602094604051948552168484015260408301526060820152600093849182805260015afa156106765781516001600160a01b038116156117dc579190565b50600190565b50505050600090600390565b600091829182602083519301915af1611805611227565b901561180e5750565b602081519101fd5b916000928392602083519301915af1611805611227565b6000543360109190911c6001600160a01b0316148015611881575b1561184f57565b60405162461bcd60e51b815260206004820152600a60248201526937b7363c9037bbb732b960b11b6044820152606490fd5b50303314611848565b1561189157565b60405162461bcd60e51b81526020600482015260116024820152701a5b9b995c8818d85b1b0819985a5b1959607a1b6044820152606490fd5b9035601e19823603018112156101a95701602081359101916001600160401b0382116101a95781360383136101a957565b908060209392818452848401376000828201840152601f01601f1916010190565b90916119f861197a61080594604085526119496040860161193c836101bf565b6001600160a01b03169052565b602081013560608601526119e861196360408301836118ca565b9390610120948560808a01526101608901916118fb565b916119df6119a261198e60608401846118ca565b603f198b8803810160a08d015296916118fb565b608083013560c08a015260a083013560e08a01526101009560c0840135878b01526119d060e08501856118ca565b91878c850301908c01526118fb565b938101906118ca565b91868403016101408701526118fb565b9160208184039101526112ec56fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca26469706673582212207e88577cae71a0106f45e0a9cd502e40a866e2354a243447f547d5e4dec16b5464736f6c63430008130033";

type TestExecAccountConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestExecAccountConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestExecAccount__factory extends ContractFactory {
  constructor(...args: TestExecAccountConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    anEntryPoint: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(anEntryPoint, overrides || {});
  }
  override deploy(
    anEntryPoint: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(anEntryPoint, overrides || {}) as Promise<
      TestExecAccount & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TestExecAccount__factory {
    return super.connect(runner) as TestExecAccount__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestExecAccountInterface {
    return new Interface(_abi) as TestExecAccountInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TestExecAccount {
    return new Contract(address, _abi, runner) as unknown as TestExecAccount;
  }
}
