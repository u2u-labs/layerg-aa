/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  TestPaymasterAcceptAll,
  TestPaymasterAcceptAllInterface,
} from "../../../contracts/test/TestPaymasterAcceptAll";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "_entryPoint",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPaymaster.PostOpMode",
        name: "mode",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "actualUserOpFeePerGas",
        type: "uint256",
      },
    ],
    name: "postOp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "accountGasLimits",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "gasFees",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct PackedUserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "maxCost",
        type: "uint256",
      },
    ],
    name: "validatePaymasterUserOp",
    outputs: [
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a080604052346101725780610a2d803803809161001d8285610177565b83396020928391810103126101725751906001600160a01b038216808303610172578160249161004c336101b0565b6040516301ffc9a760e01b8152631313998b60e31b600482015292839182905afa90811561016657600091610129575b50156100e557506080523332036100d7575b60405161083590816101f882396080518181816101900152818161023b0152818161031c01528181610392015281816103fd015281816106080152818161068d01526107920152f35b6100e0326101b0565b61008e565b6064906040519062461bcd60e51b82526004820152601e60248201527f49456e747279506f696e7420696e74657266616365206d69736d6174636800006044820152fd5b8281813d831161015f575b61013e8183610177565b8101031261015b575190811515820361015857503861007c565b80fd5b5080fd5b503d610134565b6040513d6000823e3d90fd5b600080fd5b601f909101601f19168101906001600160401b0382119082101761019a57604052565b634e487b7160e01b600052604160045260246000fd5b600080546001600160a01b039283166001600160a01b03198216811783559216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a356fe60406080815260048036101561001457600080fd5b600091823560e01c80630396cb601461066557838163205c2878146105db5750806352b7512c1461053e578063715018a6146104e45780637c627b21146104585780638da5cb5b14610430578063b0d691fe146103e857838163bb9fe6bf14610375578163c23a5cea146102ee57508063c399ec881461021157838163d0e30db014610180575063f2fde38b146100aa57600080fd5b3461017c57602036600319011261017c576001600160a01b03823581811693919290849003610178576100db61070e565b8315610126575050600054826bffffffffffffffffffffffff60a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8480fd5b8280fd5b8084848260031936011261020d577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031691823b15610208578390602483518095819363b760faf960e01b8352309083015234905af19081156101ff57506101ec5750f35b6101f590610766565b6101fc5780f35b80fd5b513d84823e3d90fd5b505050fd5b5050fd5b503461017c578260031936011261017c5780516370a0823160e01b815230838201526020816024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9283156102e457849361027d575b6020848451908152f35b909192506020903d82116102dc575b601f8201601f191683019067ffffffffffffffff8211848310176102c75750602091839185528101031261017c576020925051903880610273565b604190634e487b7160e01b6000525260246000fd5b3d915061028c565b82513d86823e3d90fd5b8084843461020d57602036600319011261020d5761030a6106f3565b61031261070e565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116803b15610371578592836024928651978895869463611d2e7560e11b865216908401525af19081156101ff57506101ec5750f35b8580fd5b8084843461020d578260031936011261020d5761039061070e565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031691823b1561020857815163bb9fe6bf60e01b81529284918491829084905af19081156101ff57506101ec5750f35b83823461042c578160031936011261042c57517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5080fd5b83823461042c578160031936011261042c57905490516001600160a01b039091168152602090f35b5091346101fc5760803660031901126101fc576003823510156101fc5760243567ffffffffffffffff80821161017c573660238301121561017c578184013590811161017c57369101602401116101fc575060206064926104b7610790565b5162461bcd60e51b815291820152600d60248201526c6d757374206f7665727269646560981b6044820152fd5b83346101fc57806003193601126101fc576104fd61070e565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b503461017c576060906003199382853601126101fc5767ffffffffffffffff94843586811161017c579061012091360301126101fc5761057c610790565b815194602094858701918211878310176102c75750825280855281519382855285518093860152815b8381106105c857508483018401829052840152601f01601f191682018290030190f35b86810182015186820186015281016105a5565b8084843461020d578060031936011261020d576105f66106f3565b6105fe61070e565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116803b15610371578592836044928651978895869463040b850f60e31b8652169084015260243560248401525af19081156101ff57506101ec5750f35b50602036600319011261017c5782823563ffffffff811680910361042c5761068b61070e565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031693843b1561017c5760249084519586938492621cb65b60e51b845283015234905af19081156101ff57506106e7575080f35b6106f090610766565b80f35b600435906001600160a01b038216820361070957565b600080fd5b6000546001600160a01b0316330361072257565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b67ffffffffffffffff811161077a57604052565b634e487b7160e01b600052604160045260246000fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633036107c257565b60405162461bcd60e51b815260206004820152601560248201527414d95b99195c881b9bdd08115b9d1c9e541bda5b9d605a1b6044820152606490fdfea2646970667358221220d53b5e4a901fe76303d2216946febc1536309dcf50e9576660883c0bccdf37fd64736f6c63430008130033";

type TestPaymasterAcceptAllConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestPaymasterAcceptAllConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestPaymasterAcceptAll__factory extends ContractFactory {
  constructor(...args: TestPaymasterAcceptAllConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _entryPoint: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_entryPoint, overrides || {});
  }
  override deploy(
    _entryPoint: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_entryPoint, overrides || {}) as Promise<
      TestPaymasterAcceptAll & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): TestPaymasterAcceptAll__factory {
    return super.connect(runner) as TestPaymasterAcceptAll__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestPaymasterAcceptAllInterface {
    return new Interface(_abi) as TestPaymasterAcceptAllInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TestPaymasterAcceptAll {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as TestPaymasterAcceptAll;
  }
}
