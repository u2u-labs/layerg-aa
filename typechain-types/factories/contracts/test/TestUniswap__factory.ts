/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  TestUniswap,
  TestUniswapInterface,
} from "../../../contracts/test/TestUniswap";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract TestWrappedNativeToken",
        name: "_weth",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
    ],
    name: "StubUniswapExchangeEvent",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenIn",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountIn",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountOutMinimum",
            type: "uint256",
          },
          {
            internalType: "uint160",
            name: "sqrtPriceLimitX96",
            type: "uint160",
          },
        ],
        internalType: "struct ISwapRouter.ExactInputSingleParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "exactInputSingle",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenIn",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountOut",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountInMaximum",
            type: "uint256",
          },
          {
            internalType: "uint160",
            name: "sqrtPriceLimitX96",
            type: "uint160",
          },
        ],
        internalType: "struct ISwapRouter.ExactOutputSingleParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "exactOutputSingle",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountMinimum",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "unwrapWETH9",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "weth",
    outputs: [
      {
        internalType: "contract TestWrappedNativeToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60803461007457601f61060d38819003918201601f19168301916001600160401b038311848410176100795780849260209460405283398101031261007457516001600160a01b0381169081900361007457600080546001600160a01b03191691909117905560405161057d90816100908239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608060409080825260049182361015610023575b505050361561002157600080fd5b005b600091823560e01c9081633fc8cef31461048c57508063414bf3891461039357806349404b7c1461020d5763db3e2198036100135734610209576101003660031901126102095760c4359160041983019283116101f65760a4357f29a1b057b49189ad91f5d92216fc55e37caf33e398f9e914469523c9aa5f6a036100a66104b0565b6100ae6104cb565b8551878152602081018590526001600160a01b03928316604082015291166060820152608090a16001600160a01b0394856100e76104b0565b85516323b872dd60e01b81523384820190815230602080830191909152604082018a9052999391928a9284928390036060019183918a91165af180156101ec579188939161017f9695936101cf575b5061013f6104cb565b16908461014a6104e1565b885163a9059cbb60e01b81526001600160a01b0390911692810192835260208301949094529295869384929091839160400190565b03925af19081156101c45750610197575b5051908152f35b6101b690843d86116101bd575b6101ae81836104f7565b81019061052f565b5038610190565b503d6101a4565b8351903d90823e3d90fd5b6101e590853d87116101bd576101ae81836104f7565b5038610136565b86513d87823e3d90fd5b634e487b7160e01b815260118452602490fd5b5080fd5b508281600319360112610312576024356001600160a01b038181169182900361038f578454168351926370a0823160e01b84523081850152602084602481855afa93841561038557869461034e575b50803584106103165785908415928315610274578280f35b803b156103125782906024885180958193632e1a7d4d60e01b83528a878401525af18015610308576102d4575b50508480938193829383906102cb575bf1156102c1578080808481808280f35b51903d90823e3d90fd5b506108fc6102b1565b67ffffffffffffffff829793949597116102f55750845293919085806102a1565b634e487b7160e01b835260419052602482fd5b86513d89823e3d90fd5b8280fd5b606490602086519162461bcd60e51b83528201526012602482015271496e73756666696369656e7420574554483960701b6044820152fd5b9093506020813d821161037d575b81610369602093836104f7565b810103126103795751928661025c565b8580fd5b3d915061035c565b85513d88823e3d90fd5b8480fd5b5034610209576101003660031901126102095760c43591600583018093116101f6576104619360a4357f29a1b057b49189ad91f5d92216fc55e37caf33e398f9e914469523c9aa5f6a036103e56104b0565b6103ed6104cb565b8651848152602081018990526001600160a01b03928316604082015291166060820152608090a16001600160a01b0390816104266104b0565b86516323b872dd60e01b815233868201908152306020828101919091526040820195909552939990938a938593169183918991839160600190565b03925af1801561048257928792879261017f96956101cf575061013f6104cb565b85513d86823e3d90fd5b83903461020957816003193601126102095790546001600160a01b03168152602090f35b6004356001600160a01b03811681036104c65790565b600080fd5b6024356001600160a01b03811681036104c65790565b6064356001600160a01b03811681036104c65790565b90601f8019910116810190811067ffffffffffffffff82111761051957604052565b634e487b7160e01b600052604160045260246000fd5b908160209103126104c6575180151581036104c6579056fea26469706673582212204f4a5b4e5e4f0e1379053bcd683e483f37cbe6a51a95bc99295d631242d123df64736f6c63430008130033";

type TestUniswapConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestUniswapConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestUniswap__factory extends ContractFactory {
  constructor(...args: TestUniswapConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _weth: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_weth, overrides || {});
  }
  override deploy(
    _weth: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_weth, overrides || {}) as Promise<
      TestUniswap & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TestUniswap__factory {
    return super.connect(runner) as TestUniswap__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestUniswapInterface {
    return new Interface(_abi) as TestUniswapInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): TestUniswap {
    return new Contract(address, _abi, runner) as unknown as TestUniswap;
  }
}
