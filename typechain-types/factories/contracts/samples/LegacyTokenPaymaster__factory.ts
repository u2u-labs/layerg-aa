/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  LegacyTokenPaymaster,
  LegacyTokenPaymasterInterface,
} from "../../../contracts/samples/LegacyTokenPaymaster";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "accountFactory",
        type: "address",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "contract IEntryPoint",
        name: "_entryPoint",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "COST_OF_POST",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mintTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPaymaster.PostOpMode",
        name: "mode",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "actualUserOpFeePerGas",
        type: "uint256",
      },
    ],
    name: "postOp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "theFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "accountGasLimits",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "gasFees",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct PackedUserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "maxCost",
        type: "uint256",
      },
    ],
    name: "validatePaymasterUserOp",
    outputs: [
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c060409080825234620005f15762001ba3803803809162000022828562000624565b83398101606082820312620005f1578151906001600160a01b03908183168303620005f15760208481015190946001600160401b03949091858111620005f1578201601f92848483011215620005f15781518781116200060e57895192601f1996620000958b8989860116018662000624565b8285528a8383010111620005f1578a92918a9160005b828110620005f6575050906000918501015201519585871696878103620005f1576000543360018060a01b03198216176000558a51973391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a36301ffc9a760e01b875286898160049a631313998b60e31b8c83015260249a8b915afa908115620005e657600091620005a2575b5015620005605760805281519481861162000486578754956001968781811c9116801562000555575b8b82101462000467578681116200050a575b50808a878211600114620004a6576000916200049a575b50600019600383901b1c191690871b1788555b8251918211620004865760059283548781811c911680156200047b575b8b82101462000467579081878594931162000411575b508a91878411600114620003ac5750600092620003a0575b5050600019600383901b1c191690851b1790555b60a05230156200036057506003548181018091116200034c576003553060005280845284600020818154019055845190815260007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef853093a333156200030157505030600052600281528160002033600052815260001980836000205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92533923092a35161155a90816200064982396080518181816104610152818161050f015281816105c001528181610636015281816106a101528181610ea3015281816110660152611470015260a0518181816107bc0152610b430152f35b60229192608494519362461bcd60e51b85528401528201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152fd5b82601185634e487b7160e01b600052526000fd5b92939050606494519362461bcd60e51b85528401528201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152fd5b015190503880620001ed565b88949291921691856000528b6000209260005b8d828210620003fa5750508411620003e0575b505050811b01905562000201565b015160001960f88460031b161c19169055388080620003d2565b8385015186558b97909501949384019301620003bf565b90919250846000528a60002087808601871c8201928d87106200045d575b918a91879695949301881c01915b8281106200044d575050620001d5565b600081558695508a91016200043d565b925081926200042f565b8860228b634e487b7160e01b600052526000fd5b90607f1690620001bf565b86604189634e487b7160e01b600052526000fd5b9050840151386200018f565b83899316908b6000528c600020918d6000905b828210620004f25750508311620004d8575b5050811b018855620001a2565b86015160001960f88460031b161c191690553880620004cb565b838a015185558c969094019392830192018e620004b9565b896000528a6000208780840160051c8201928d85106200054b575b0160051c019088905b8281106200053e57505062000178565b600081550188906200052e565b9250819262000525565b90607f169062000166565b895162461bcd60e51b81528089018a9052601e818901527f49456e747279506f696e7420696e74657266616365206d69736d6174636800006044820152606490fd5b8a81813d8311620005de575b620005ba818362000624565b81010312620005da5751908115158203620005d75750386200013d565b80fd5b5080fd5b503d620005ae565b8b513d6000823e3d90fd5b600080fd5b8181018401518782018501528d95508c9301620000ab565b634e487b7160e01b600052604160045260246000fd5b601f909101601f19168101906001600160401b038211908210176200060e5760405256fe60406080815260048036101561001457600080fd5b600091823560e01c80630396cb601461103e57806306fdde0314610f49578063095ea7b314610f1f57806318160ddd14610f0057838163205c287814610e765750806323b872dd14610daa578063313ce56714610d8e5780633950935114610d3f57806352b7512c14610aac57806370a0823114610a69578063715018a614610a0f578063796d4371146109f25780637c627b211461092e5780638da5cb5b1461090657806395d89b41146107eb5780639f5ca221146107a7578063a457c2d714610701578063a9059cbb146106d0578063b0d691fe1461068c57838163bb9fe6bf14610619578163c23a5cea1461059257508063c399ec88146104e257838163d0e30db01461045157508063dd62ed3e146103ff578063f0dda65c146103395763f2fde38b1461014457600080fd5b34610335576020806003193601126103315761015e611109565b90610167611135565b84546001600160a01b039081169230156102e2578315610294578190306000526002845285600020856000528452600086812055855194600086527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259586863092a36101d1611135565b1694851561024257508490600054826bffffffffffffffffffffffff60a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a330600052600281528260002084600052815260001992838160002055519283523092a380f35b845162461bcd60e51b8152908101839052602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b845162461bcd60e51b8152808701849052602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b845162461bcd60e51b81528087018490526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b8380fd5b8280fd5b5034610335578060031936011261033557610352611109565b906024359161035f611135565b6001600160a01b03169283156103bd57506020827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef926103a287956003546111d9565b6003558585526001835280852082815401905551908152a380f35b6020606492519162461bcd60e51b8352820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152fd5b83823461044d578060031936011261044d5760209161041c611109565b8261042561111f565b6001600160a01b03928316845260028652922091166000908152908352819020549051908152f35b5080fd5b808484826003193601126104de577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031691823b156104d9578390602483518095819363b760faf960e01b8352309083015234905af19081156104d057506104bd5750f35b6104c69061118d565b6104cd5780f35b80fd5b513d84823e3d90fd5b505050fd5b5050fd5b503461033557826003193601126103355780516370a0823160e01b815230928101929092526020826024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa918215610588578392610551575b6020838351908152f35b9091506020813d8211610580575b8161056c602093836111b7565b810103126103355760209250519038610547565b3d915061055f565b81513d85823e3d90fd5b808484346104de5760203660031901126104de576105ae611109565b6105b6611135565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116803b15610615578592836024928651978895869463611d2e7560e11b865216908401525af19081156104d057506104bd5750f35b8580fd5b808484346104de57826003193601126104de57610634611135565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031691823b156104d957815163bb9fe6bf60e01b81529284918491829084905af19081156104d057506104bd5750f35b83823461044d578160031936011261044d57517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b83823461044d578060031936011261044d576020906106fa6106f0611109565b60243590336111fc565b5160018152f35b5091346104cd57826003193601126104cd5761071b611109565b91836024359233815260026020522060018060a01b038416600052602052836000205490828210610756576020856106fa858503873361136c565b608490602086519162461bcd60e51b8352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152fd5b83823461044d578160031936011261044d57517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5082346104cd57806003193601126104cd578151918160055492600184811c918186169586156108fc575b60209687851081146108e9578899509688969785829a5291826000146108c2575050600114610866575b50505061086292916108539103856111b7565b519282849384528301906110c9565b0390f35b9190869350600583527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db05b8284106108aa5750505082010181610853610862610840565b8054848a018601528895508794909301928101610891565b60ff19168782015293151560051b8601909301935084925061085391506108629050610840565b634e487b7160e01b835260228a52602483fd5b92607f1692610816565b83823461044d578160031936011261044d57905490516001600160a01b039091168152602090f35b8284346104cd5760803660031901126104cd576003823510156104cd576024359167ffffffffffffffff8084116103355736602385011215610335578382013590811161033557830192366024850111610335576020816064359561099161146e565b031261033557602401359060018060a01b0382168092036109ed57613a9893808502948504036109da575060646109ce6109d793946044356111d9565b049030906111fc565b80f35b634e487b7160e01b835260119052602482fd5b600080fd5b83823461044d578160031936011261044d5760209051613a988152f35b83346104cd57806003193601126104cd57610a28611135565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b83823461044d57602036600319011261044d57602090610aa5610a8a611109565b6001600160a01b031660009081526001602052604090205490565b9051908152f35b5091903461044d576003199260603685011261033557813567ffffffffffffffff94858211610d3b57610120828501918336030112610d3b57610aed61146e565b60446064813504610b0160e48501846114dd565b603495919511610c8a57613a9860248096013560801c1115610ceb578201610b2981856114dd565b159050610c8e57610b3a90846114dd565b601411610c8a577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316903560601c03610c3b57610b81610a8a84611510565b10610bea5750610b9090611510565b9282519360018060a01b03166020850152602084528284019584871090871117610bd75750508381528352610bc860808201826110c9565b916060820152603f1991030190f35b604190634e487b7160e01b600052526000fd5b847f546f6b656e5061796d61737465723a206e6f2062616c616e636520287072652d608492602786602089519562461bcd60e51b8752860152840152820152666372656174652960c81b6064820152fd5b845162461bcd60e51b81526020818801526025818601527f546f6b656e5061796d61737465723a2077726f6e67206163636f756e74206661818401526463746f727960d81b6064820152608490fd5b8780fd5b50610c9b610a8a84611510565b10610caa5750610b9090611510565b847f546f6b656e5061796d61737465723a206e6f2062616c616e6365000000000000606492601a86602089519562461bcd60e51b8752860152840152820152fd5b855162461bcd60e51b81526020818901526026818701527f546f6b656e5061796d61737465723a2067617320746f6f206c6f7720666f722081850152650706f73744f760d41b6064820152608490fd5b8480fd5b83823461044d578060031936011261044d576106fa60209282610d60611109565b91338152600286522060018060a01b0382166000528452610d8760243584600020546111d9565b903361136c565b83823461044d578160031936011261044d576020905160128152f35b5091903461044d57606036600319011261044d57610dc6611109565b610dce61111f565b91846044359460018060a01b0384168152600260205220336000526020528460002054906000198203610e0a575b6020866106fa8787876111fc565b848210610e335750918391610e28602096956106fa9503338361136c565b919394819350610dfc565b606490602087519162461bcd60e51b8352820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b808484346104de57806003193601126104de57610e91611109565b610e99611135565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116803b15610615578592836044928651978895869463040b850f60e31b8652169084015260243560248401525af19081156104d057506104bd5750f35b83823461044d578160031936011261044d576020906003549051908152f35b83823461044d578060031936011261044d576020906106fa610f3f611109565b602435903361136c565b5082346104cd57806003193601126104cd5781519181845492600184811c91818616958615611034575b60209687851081146108e9579087899a92868b999a9b52918260001461100a575050600114610faf575b858861086289610853848a03856111b7565b815286935091907f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b828410610ff2575050508201018161085361086288610f9d565b8054848a018601528895508794909301928101610fd8565b60ff19168882015294151560051b8701909401945085935061085392506108629150899050610f9d565b92607f1692610f73565b5060203660031901126103355782823563ffffffff811680910361044d57611064611135565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031693843b156103355760249084519586938492621cb65b60e51b845283015234905af19081156104d057506110c0575080f35b6109d79061118d565b919082519283825260005b8481106110f5575050826000602080949584010152601f8019910116010190565b6020818301810151848301820152016110d4565b600435906001600160a01b03821682036109ed57565b602435906001600160a01b03821682036109ed57565b6000546001600160a01b0316330361114957565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b67ffffffffffffffff81116111a157604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff8211176111a157604052565b919082018092116111e657565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0390811691821561131957169182156112c8576000828152600160205260408120549180831061127457604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef95876020965260018652038282205586815220818154019055604051908152a3565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b6001600160a01b0390811691821561141d57169182156113cd5760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260028252604060002085600052825280604060002055604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633036114a057565b60405162461bcd60e51b815260206004820152601560248201527414d95b99195c881b9bdd08115b9d1c9e541bda5b9d605a1b6044820152606490fd5b903590601e19813603018212156109ed570180359067ffffffffffffffff82116109ed576020019181360383136109ed57565b356001600160a01b03811681036109ed579056fea2646970667358221220d987455c04f7f430321bd104b2c03caf89e307d3bc5efff84081c4564b0f1c9b64736f6c63430008130033";

type LegacyTokenPaymasterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LegacyTokenPaymasterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LegacyTokenPaymaster__factory extends ContractFactory {
  constructor(...args: LegacyTokenPaymasterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    accountFactory: AddressLike,
    _symbol: string,
    _entryPoint: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      accountFactory,
      _symbol,
      _entryPoint,
      overrides || {}
    );
  }
  override deploy(
    accountFactory: AddressLike,
    _symbol: string,
    _entryPoint: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      accountFactory,
      _symbol,
      _entryPoint,
      overrides || {}
    ) as Promise<
      LegacyTokenPaymaster & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): LegacyTokenPaymaster__factory {
    return super.connect(runner) as LegacyTokenPaymaster__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LegacyTokenPaymasterInterface {
    return new Interface(_abi) as LegacyTokenPaymasterInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): LegacyTokenPaymaster {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as LegacyTokenPaymaster;
  }
}
